# Marvel Ultimate Alliance 2 (script 0.3)
# script for QuickBMS http://quickbms.aluigi.org

endian big
idstring "\x1aAGI"

get VER long
get DUMMY long
get FILES long
get DATA_OFF long
get DUMMY long
get NAMES_OFF long
if VER < 0xb
if NAMES_OFF u< DATA_OFF
    get NAMES_OFF long  # some samples...
endif
endif
get DUMMY long
get ZERO long
get DUMMY long
if VER >= 9
    get NAMES_OFF long
    get DUMMY long
    get DUMMY long
    get DUMMY long
else
    get DUMMY long
    get ZERO long
endif
for i = 0 < FILES
    get CRC long
next i
for i = 0 < FILES
    if VER >= 9
        get OFFSET longlong
    else
        get OFFSET long
    endif
    get SIZE long
    get MODE long
    putarray 0 i OFFSET
    putarray 1 i SIZE
    putarray 2 i MODE
next i

goto NAMES_OFF
for i = 0 < FILES
    getarray OFFSET 0 i
    getarray SIZE   1 i
    getarray MODE   2 i

    if OFFSET u>= 0xff000000    # 1006_LightVillain.bld
        math OFFSET = DATA_OFF
    endif

    if NAMES_OFF == 0
        set NAME string ""
        savepos BACKUP_OFF
    else
        get NAME_OFF long
        if i == 0
            xmath TMP "FILES * 4"
            if NAME_OFF != TMP
                math CHANGE_ENDIAN = 1
            else
                math CHANGE_ENDIAN = 0
            endif
        endif
        if CHANGE_ENDIAN != 0
            reverselong NAME_OFF
        endif
        savepos BACKUP_OFF
        math NAME_OFF + NAMES_OFF
        goto NAME_OFF
        get NAME string
    endif

    if MODE == 0xffffffff
        log NAME OFFSET SIZE
    else
        if MODE & 0x20000000
            comtype lzma_dynamic    # no, it's not just lzma
        else
            comtype deflate_noerror # http://zenhax.com/viewtopic.php?p=11359#p11359
        endif

        math CHUNK_SIZE = 0x8000
        putvarchr MEMORY_FILE SIZE 0
        log MEMORY_FILE 0 0
        append 1    # necessary for adding zeroes
        for MYSIZE = 0 < SIZE
            goto OFFSET
            get CHUNK_ZSIZE short
            savepos OFFSET
            if CHUNK_ZSIZE < CHUNK_SIZE
                if MODE & 0x20000000
                    math CHUNK_ZSIZE + 5    # necessary!
                endif
                clog MEMORY_FILE OFFSET CHUNK_ZSIZE CHUNK_SIZE
            else
                # problems here, it looks like a sort of updated chunk where CHUNK_ZSIZE is the -OFFSET
                math CHUNK_ZSIZE & 0x7fff
                string NAME p "UNSUPPORTED/%s" NAME
                math SIZE = MYSIZE
                break
            endif
            math OFFSET + CHUNK_ZSIZE
            math OFFSET x 0x800
            #get MYSIZE asize MEMORY_FILE
            math MYSIZE + CHUNK_SIZE
            if MYSIZE > SIZE
                get MYSIZE asize MEMORY_FILE
            endif
            goto MYSIZE MEMORY_FILE
        next
        append

        log NAME 0 SIZE MEMORY_FILE
    endif

    goto BACKUP_OFF
next i
